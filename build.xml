<?xml version="1.0"?>

<!DOCTYPE project [
        <!ENTITY commonAntCommands SYSTEM "../one-deploy/build/common-ant.xml">
        ]>


<project name="apache-cassandra" default="build-stat" basedir="."
        xmlns:ivy="antlib:org.apache.ivy.ant">
    <property name="one-deploy.location" location="../one-deploy"/>

    <!-- path to root -->
    <property name="root.dir" value="${basedir}"/>

    <!-- local.properties имеют высший приоритет -->
    <property file="${root.dir}/local.properties"/>

    <property file="${root.dir}/build.properties"/>

    <!-- проперти для деплоймент целей -->
    <property file="${user.home}/one/${ant.project.name}.properties"/>

	&commonAntCommands;

    <property name="build.src.stat" value="${basedir}/stat/src"/>
    <property name="build.classes.cassandra" value="${basedir}/build/classes"/>
    <property name="build.classes.stat" value="${basedir}/build/classes-stat"/>
    <property name="build.components" value="${basedir}/build/"/>

    <path id="autoivy.ext.classpath">
        <fileset dir="${one-deploy.location}/lib/ivy" includes="*.jar"/>
    </path>
    <path id="autoivy.classpath">
        <fileset dir="${build.lib}">
          <include name="**/*.jar" />
        </fileset>
        <pathelement location="${build}/ivy-${ivy.version}.jar"/>
        <path refid="autoivy.ext.classpath"/>
    </path>
    <fileset dir="${lib}" id="onelibs">
        <include name="google-collections*.jar" />
    </fileset>
    <path id="cassandra.classpath">
        <pathelement location="${cobertura.classes.dir}"/>
        <pathelement location="${build.classes.cassandra}"/>
        <fileset dir="${build.lib}">
          <include name="**/*.jar" />
        </fileset>
    	<fileset refid="onelibs"/>
        <path refid="autoivy.classpath" />
    </path>

    <!-- include user specific build properties -->
    <property file="${user.home}/one.properties"/>
    <property file="${user.home}/one/one.properties"/>

	<target name="clean">
        <ant antfile="build-cs.xml" target="clean" inheritall="false" />
        
		<delete dir="${build.classes.stat}"/>
		
	</target>
	
    <!--target name="ivy-publish" >
        <property name="version" value="${build.number.major}.${build.number.minor}.${build.number.build}"/>
        <ant antfile="build-cs.xml" target="jar" inheritall="false">
            <property name="version" value="${version}"/>
        </ant>
        
        <ivy:publish resolver="odkl-publish"
                     pubrevision="${version}"
                     overwrite="true"
                     organisation="apache-cassandra"
        	         module="cassandra"
        	         revision="${version}"
                     forcedeliver="true">
            <artifacts pattern="${build.dir}/[artifact]-[revision].[ext]"/>
        </ivy:publish>
    </target-->
	
    <target name="ivy-prepare-for-publish" if="ivy.enabled" depends="ivy-assemble-source-jars">
        <copy file="${build}/apache-cassandra-${build.number.str}.jar" todir="${ivy.deliver.dir}/jar"/>
        <copy file="${build}/odkl-cassandra-stats.jar" todir="${ivy.deliver.dir}/jar"/>
    </target>

	<target name="test">
        <ant antfile="build-cs.xml" target="test" inheritall="false">
            <property name="version" value="${build.number.major}.${build.number.minor}.${build.number.build}"/>
        </ant>
	</target>
	
    <target name="build-stat" >
        <echo message="${ant.project.name}: ${ant.file}"/>
    	<mkdir dir="${build.classes.stat}"/>
    	
        <property file="build.number"/>
    	
    	<ant antfile="build-cs.xml" target="jar" inheritall="false">
    		<property name="version" value="${build.number.major}.${build.number.minor}.${build.number.build}"/>
    	</ant>
    	
    	<property name="aaa" refid="cassandra.classpath"/>
    	<echo>${aaa}</echo>
    	
        <javac debug="true" debuglevel="lines,vars,source" destdir="${build.classes.stat}">
            <src path="${build.src.stat}"/>
            <classpath >
            	<path refid="cassandra.classpath"/>
            </classpath>
        </javac>
    </target>

    <!--
    The jar target makes cassandra.jar output.
    -->
    <target name="stat-jar" depends="build-stat">
      <mkdir dir="${build.classes.stat}/META-INF"/>
      <copy file="${build.src.stat}/META-INF/aop.xml" tofile="${build.classes.stat}/META-INF/aop.xml"/>
      <jar jarfile="${build}/odkl-cassandra-stats.jar"
           basedir="${build.classes.stat}">
        <manifest>
          <attribute name="Implementation-Title" value="Odkl Cassandra Statistics Agent"/>
          <attribute name="Implementation-Version" value="${version}"/>
          <attribute name="Implementation-Vendor" value="Odnoklassniki"/>
        </manifest>
      </jar>
    </target>
	
	<target name="build" depends="stat-jar"/>
	
    <!-- ============================================================================ -->
    <!-- MANDATORY TASK -->
    <!-- Build package release with dependecies -->
    <!-- ============================================================================ -->
    <target name="build-release" depends="build,prepare-build">
    	
    	<property name="build.deploy.bin" value="${build.deploy}/bin"/>
        <property name="version" value="${build.number.major}.${build.number.minor}.${build.number.build}"/>

        <mkdir dir="${build.deploy.lib}"/>
        <copy todir="${build.deploy.lib}">
            <fileset dir="${lib}">
              <include name="*.jar" />
            </fileset>
            <fileset dir="${build.lib}/jars">
                <include name="one-*.jar" />
                <include name="aspectj*.jar" />
                <include name="commons-logging*.jar" />
                <include name="commons-pool*.jar" />
                <include name="zookeeper*.jar" />
                <include name="gelf*.jar" />
                <include name="log4j*.jar" />
                <include name="Sprinta*.jar" />
                <include name="libthrift*.jar" />
            </fileset>
          <fileset dir="${build}">
            <include name="apache-cassandra-${version}.jar" />
            <include name="odkl-cassandra-stats.jar" />
          </fileset>
        </copy>
        <mkdir dir="${build.deploy.bin}"/>
        <copy todir="${build.deploy.bin}" >
          <fileset dir="bin"/>
        </copy>
        <copy todir="${build.deploy.conf}">
            <fileset dir="stat/conf"/>
        </copy>   
        <copy todir="${build.deploy}/interface">
          <fileset dir="interface">
            <include name="**/*.thrift" />
          </fileset>
        </copy>      
    	
        <!--copy file="${ant.file}" tofile="${build.deploy}/build.xml" /-->
    	
    </target>
	
	<target name="new-tag">
		<fail message="new-tag is not supported for this package. please edit build.number patch level by hand, commit and run ant tag target"/>
	</target>

    <!-- ============================================================================ -->
    <!-- MANDATORY TASK -->
    <!-- Deploy package release -->
    <!-- ============================================================================ -->
    <target name="deploy-release">
        <mkdir dir="${root.dir}"/>
    	<!--
    	cassandra
        clustertool
        json2sstable
        nodeprobe
        nodetool
        sstable2json
        sstablekeys
        stop-server
    	
    	-->

        <!-- prepare lib -->
        <property name="lib.service.dir" value="${root.dir}/lib"/>
        <mkdir dir="${lib.service.dir}"/>

        <move todir="${lib.service.dir}">
            <fileset dir="${build.deploy.lib}" includes="*.jar"/>
        </move>

        <!-- prepare bin -->
        <property name="bin.service.dir" value="${root.dir}/bin"/>
        <property name="build.deploy.bin" value="${build.deploy}/bin"/>
        <mkdir dir="${bin.service.dir}"/>

        <move todir="${bin.service.dir}">
            <fileset dir="${build.deploy.bin}" includes="*"/>
        </move>
    	<chmod perm="+x" dir="${bin.service.dir}">
            <include name="cassandra"/>
            <include name="clustertool"/>
    	    <include name="json2sstable"/>
    	    <include name="nodeprobe"/>
    	    <include name="nodetool"/>
            <include name="sstable2json"/>
            <include name="sstablekeys"/>
            <include name="stop-server"/>
            <include name="logreplay"/>
    	</chmod>

        <!-- prepare configuration -->
        <property name="conf.service.dir" value="${root.dir}/conf"/>
        <mkdir dir="${conf.service.dir}"/>

        <antcall target="build-conf">
            <param name="build-conf.src.dir" value="${build.deploy.conf}" />
            <param name="build-conf.path" value="prod" />
            <param name="build-conf.dest.dir" value="${conf.service.dir}" />
        </antcall>

        <antcall target="filter-property">
            <param name="filter.conf.dir" value="${conf.service.dir}" />
        </antcall>

        <delete dir="${build}"/>
    </target>
	
    <target name="filter-property">
        <replace dir="${filter.conf.dir}">
            <replacefilter token="{db.url.log}" value="${db.url.log}"/>
            <replacefilter token="{db.driver}" value="${db.driver}"/>

            <replacefilter token="{db.username}" value="${db.username}"/>
            <replacefilter token="{db.password}" value="${db.password}"/>
        </replace>
    </target>

    <target name="ivy-assemble-source-jars">
        <mkdir dir="${ivy.deliver.source.dir}"/>
        <jar jarfile="${ivy.deliver.source.dir}/${ant.project.name}.jar">
            <fileset dir="${src}"/>
        </jar>

    	<mkdir dir="${ivy.deliver.source.dir}"/>
        <jar jarfile="${ivy.deliver.source.dir}/odkl-cassandra-stats.jar">
            <fileset dir="${build.src.stat}"/>
        </jar>
    </target>

	<target name="dev" depends="build, ivy-assemble-source-jars">
        <antcall target="ivy-publish-local"/>
    </target>

</project>
